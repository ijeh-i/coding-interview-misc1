"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const chai_1 = require("chai");
const DeepCopy_1 = require("./DeepCopy");
describe("DeepCopy", function () {
    it("basic tests", function () {
        const dict = {
            "hello": "world"
        };
        const copy = DeepCopy_1.DeepCopy.deepCopy(dict);
        chai_1.assert.deepEqual(dict, copy);
    });
    it("basic integrity", function () {
        const dict = {
            "hello": "world"
        };
        const copy = DeepCopy_1.DeepCopy.deepCopy(dict);
        dict['foo'] = 'bar';
        chai_1.assert.deepEqual(copy, {
            "hello": "world"
        });
    });
    it("inner integrity", function () {
        const dict = {
            "hello": "world",
            "inner": {
                "foo": "bar"
            }
        };
        const copy = DeepCopy_1.DeepCopy.deepCopy(dict);
        dict['inner']['foo'] = 'cat';
        chai_1.assert.deepEqual(copy, {
            "hello": "world",
            "inner": {
                "foo": "bar"
            }
        });
    });
    it("inner integrity with array", function () {
        const dict = {
            "hello": "world",
            "inner": [
                'bar'
            ]
        };
        const copy = DeepCopy_1.DeepCopy.deepCopy(dict);
        dict['inner'][0] = 'cat';
        chai_1.assert.deepEqual(copy, {
            "hello": "world",
            "inner": [
                'bar'
            ]
        });
    });
    it("deep copy of primitives", function () {
        chai_1.assert.equal(DeepCopy_1.DeepCopy.deepCopy(5), 5);
        chai_1.assert.equal(DeepCopy_1.DeepCopy.deepCopy("hello"), "hello");
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGVlcENvcHlUZXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiRGVlcENvcHlUZXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQTRCO0FBQzVCLHlDQUFzQztBQUV0QyxRQUFRLENBQUMsVUFBVSxFQUFFO0lBSWpCLEVBQUUsQ0FBQyxhQUFhLEVBQUU7UUFFZCxNQUFNLElBQUksR0FBUTtZQUNkLE9BQU8sRUFBRSxPQUFPO1NBQ25CLENBQUM7UUFFRixNQUFNLElBQUksR0FBRyxtQkFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUVyQyxhQUFNLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztJQUVqQyxDQUFDLENBQUMsQ0FBQztJQUVILEVBQUUsQ0FBQyxpQkFBaUIsRUFBRTtRQUVsQixNQUFNLElBQUksR0FBUTtZQUNkLE9BQU8sRUFBRSxPQUFPO1NBQ25CLENBQUM7UUFFRixNQUFNLElBQUksR0FBRyxtQkFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUVyQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsS0FBSyxDQUFDO1FBRXBCLGFBQU0sQ0FBQyxTQUFTLENBQUMsSUFBSSxFQUFFO1lBQ25CLE9BQU8sRUFBRSxPQUFPO1NBQ25CLENBQUMsQ0FBQztJQUVQLENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLGlCQUFpQixFQUFFO1FBRWxCLE1BQU0sSUFBSSxHQUFRO1lBQ2QsT0FBTyxFQUFFLE9BQU87WUFDaEIsT0FBTyxFQUFFO2dCQUNMLEtBQUssRUFBRSxLQUFLO2FBQ2Y7U0FDSixDQUFDO1FBRUYsTUFBTSxJQUFJLEdBQUcsbUJBQVEsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFckMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLEtBQUssQ0FBQyxHQUFHLEtBQUssQ0FBQztRQUU3QixhQUFNLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRTtZQUNuQixPQUFPLEVBQUUsT0FBTztZQUNoQixPQUFPLEVBQUU7Z0JBQ0wsS0FBSyxFQUFFLEtBQUs7YUFDZjtTQUNKLENBQUMsQ0FBQztJQUVQLENBQUMsQ0FBQyxDQUFDO0lBR0gsRUFBRSxDQUFDLDRCQUE0QixFQUFFO1FBRTdCLE1BQU0sSUFBSSxHQUFRO1lBQ2QsT0FBTyxFQUFFLE9BQU87WUFDaEIsT0FBTyxFQUFFO2dCQUNMLEtBQUs7YUFDUjtTQUNKLENBQUM7UUFFRixNQUFNLElBQUksR0FBRyxtQkFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUVyQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDO1FBRXpCLGFBQU0sQ0FBQyxTQUFTLENBQUMsSUFBSSxFQUFFO1lBQ25CLE9BQU8sRUFBRSxPQUFPO1lBQ2hCLE9BQU8sRUFBRTtnQkFDTCxLQUFLO2FBQ1I7U0FDSixDQUFDLENBQUM7SUFFUCxDQUFDLENBQUMsQ0FBQztJQUVILEVBQUUsQ0FBQyx5QkFBeUIsRUFBRTtRQUUxQixhQUFNLENBQUMsS0FBSyxDQUFDLG1CQUFRLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ3RDLGFBQU0sQ0FBQyxLQUFLLENBQUMsbUJBQVEsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFFdEQsQ0FBQyxDQUFDLENBQUM7QUFFUCxDQUFDLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7YXNzZXJ0fSBmcm9tICdjaGFpJztcbmltcG9ydCB7IERlZXBDb3B5IH0gZnJvbSAnLi9EZWVwQ29weSc7XG5cbmRlc2NyaWJlKFwiRGVlcENvcHlcIiwgZnVuY3Rpb24oKSB7XG5cbiAgICAvLyBUT0RPOiBtYWtlIHN1cmUgYWxsIG9mIHRoZSBmb2xsb3dpbmcgdGVzdHMgcGFzcyB3aXRoIHlvdXIgbmV3IGNvZGUuXG5cbiAgICBpdChcImJhc2ljIHRlc3RzXCIsIGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIGNvbnN0IGRpY3Q6IGFueSA9IHtcbiAgICAgICAgICAgIFwiaGVsbG9cIjogXCJ3b3JsZFwiXG4gICAgICAgIH07XG5cbiAgICAgICAgY29uc3QgY29weSA9IERlZXBDb3B5LmRlZXBDb3B5KGRpY3QpO1xuXG4gICAgICAgIGFzc2VydC5kZWVwRXF1YWwoZGljdCwgY29weSk7XG5cbiAgICB9KTtcblxuICAgIGl0KFwiYmFzaWMgaW50ZWdyaXR5XCIsIGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIGNvbnN0IGRpY3Q6IGFueSA9IHtcbiAgICAgICAgICAgIFwiaGVsbG9cIjogXCJ3b3JsZFwiXG4gICAgICAgIH07XG5cbiAgICAgICAgY29uc3QgY29weSA9IERlZXBDb3B5LmRlZXBDb3B5KGRpY3QpO1xuXG4gICAgICAgIGRpY3RbJ2ZvbyddID0gJ2Jhcic7XG5cbiAgICAgICAgYXNzZXJ0LmRlZXBFcXVhbChjb3B5LCB7XG4gICAgICAgICAgICBcImhlbGxvXCI6IFwid29ybGRcIlxuICAgICAgICB9KTtcblxuICAgIH0pO1xuXG4gICAgaXQoXCJpbm5lciBpbnRlZ3JpdHlcIiwgZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgY29uc3QgZGljdDogYW55ID0ge1xuICAgICAgICAgICAgXCJoZWxsb1wiOiBcIndvcmxkXCIsXG4gICAgICAgICAgICBcImlubmVyXCI6IHtcbiAgICAgICAgICAgICAgICBcImZvb1wiOiBcImJhclwiXG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgY29uc3QgY29weSA9IERlZXBDb3B5LmRlZXBDb3B5KGRpY3QpO1xuXG4gICAgICAgIGRpY3RbJ2lubmVyJ11bJ2ZvbyddID0gJ2NhdCc7XG5cbiAgICAgICAgYXNzZXJ0LmRlZXBFcXVhbChjb3B5LCB7XG4gICAgICAgICAgICBcImhlbGxvXCI6IFwid29ybGRcIixcbiAgICAgICAgICAgIFwiaW5uZXJcIjoge1xuICAgICAgICAgICAgICAgIFwiZm9vXCI6IFwiYmFyXCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICB9KTtcblxuXG4gICAgaXQoXCJpbm5lciBpbnRlZ3JpdHkgd2l0aCBhcnJheVwiLCBmdW5jdGlvbigpIHtcblxuICAgICAgICBjb25zdCBkaWN0OiBhbnkgPSB7XG4gICAgICAgICAgICBcImhlbGxvXCI6IFwid29ybGRcIixcbiAgICAgICAgICAgIFwiaW5uZXJcIjogW1xuICAgICAgICAgICAgICAgICdiYXInXG4gICAgICAgICAgICBdXG4gICAgICAgIH07XG5cbiAgICAgICAgY29uc3QgY29weSA9IERlZXBDb3B5LmRlZXBDb3B5KGRpY3QpO1xuXG4gICAgICAgIGRpY3RbJ2lubmVyJ11bMF0gPSAnY2F0JztcblxuICAgICAgICBhc3NlcnQuZGVlcEVxdWFsKGNvcHksIHtcbiAgICAgICAgICAgIFwiaGVsbG9cIjogXCJ3b3JsZFwiLFxuICAgICAgICAgICAgXCJpbm5lclwiOiBbXG4gICAgICAgICAgICAgICAgJ2JhcidcbiAgICAgICAgICAgIF1cbiAgICAgICAgfSk7XG5cbiAgICB9KTtcblxuICAgIGl0KFwiZGVlcCBjb3B5IG9mIHByaW1pdGl2ZXNcIiwgZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgYXNzZXJ0LmVxdWFsKERlZXBDb3B5LmRlZXBDb3B5KDUpLCA1KTtcbiAgICAgICAgYXNzZXJ0LmVxdWFsKERlZXBDb3B5LmRlZXBDb3B5KFwiaGVsbG9cIiksIFwiaGVsbG9cIik7XG5cbiAgICB9KTtcblxufSlcbiJdfQ==